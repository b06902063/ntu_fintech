︠ad82eda2-86cb-4d02-8f89-8e8cdf8a808es︠
F = GF(2^256 - 2^32 - 2^9 - 2^8 - 2^7 - 2^6 - 2^4 - 1)
a = 0
b = 7
EC = EllipticCurve(F, [a, b])
Gx = 0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
Gy = 0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8
G = EC(Gx, Gy)
n = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
k = 66666
d = 902027
z = 10
#encrypt
kG = k * G
kG0 = 29930184684980401757111440714186039316228031672971230850124573730964070201374
r = kG0 % n
s = (k.inverse_mod(n) * (z + r * d)) % n
print "r = ", r
print "s = ", s

w = s.inverse_mod(n) % n
u1 = z*w % n
u2 = r*w % n
print "w = ", w
print "u1 = ", u1
print "u2 = ", u2

GG = u1 * G + u2 * d * G
print "GG = ", GG

︡d4f50713-0b31-4bf2-99a6-97ae574b1579︡{"stdout":"r =  29930184684980401757111440714186039316228031672971230850124573730964070201374\n"}︡{"stdout":"s =  63855085458334682923006652616008722758963221534974104921968626568340826553505\n"}︡{"stdout":"w =  96034977103095801461015162728158047602408667036161711509265724500744428699417\n"}︡{"stdout":"u1 =  34013057132428451221583747212077213201386156129017880031815939875298995039474\n"}︡{"stdout":"u2 =  75425210646516160345521931566186506475033461021241132832491861192217667869973\n"}︡{"stdout":"GG =  (29930184684980401757111440714186039316228031672971230850124573730964070201374 : 42095718535045239447971676092147938700704502177014755608259441262637977869612 : 1)\n"}︡{"done":true}︡
︠1249749c-2489-4b1e-b525-f73b33dc0f84︠









